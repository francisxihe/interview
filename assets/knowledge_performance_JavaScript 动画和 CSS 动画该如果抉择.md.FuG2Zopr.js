import{_ as e,c as t,o,U as a}from"./chunks/framework.RtLYYSF3.js";const m=JSON.parse('{"title":"动画优化思路","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/performance/JavaScript 动画和 CSS 动画该如果抉择.md","filePath":"knowledge/performance/JavaScript 动画和 CSS 动画该如果抉择.md"}'),c={name:"knowledge/performance/JavaScript 动画和 CSS 动画该如果抉择.md"},r=a('<h1 id="动画优化思路" tabindex="-1">动画优化思路 <a class="header-anchor" href="#动画优化思路" aria-label="Permalink to &quot;动画优化思路&quot;">​</a></h1><blockquote><p>参考链接：<a href="https://github.com/qq449245884/xiaozhi/issues/13" target="_blank" rel="noreferrer">https://github.com/qq449245884/xiaozhi/issues/13</a></p></blockquote><ul><li>首先，动画一般路径为：<code>js</code> -&gt; <code>style</code> -&gt; <code>layout</code> -&gt; <code>paint</code> -&gt; <code>composite</code></li><li>如果 CSS 动画只是改变<code>transforms</code>和<code>opacity</code>，这时整个 CSS 动画得以在 合成线程 完成（而 JS 动画则会在 主线程 执行，然后触发合成线程进行下一步操作），在 JS 执行一些昂贵的任务时，主线程繁忙，CSS 动画由于使用了合成线程可以保持流畅。</li><li>如果有任何动画触发绘制，布局或两者，则需要 “主线程” 才能完成工作。 这对于基于 CSS 和 JavaScript 的动画都是如此。</li></ul><p>所以，在实现一些小的交互动效的时候，就多考虑考虑 CSS 动画。对于一些复杂控制的动画，使用 javascript 比较可靠。</p>',4),_=[r];function i(s,d,n,l,S,p){return o(),t("div",null,_)}const u=e(c,[["render",i]]);export{m as __pageData,u as default};
